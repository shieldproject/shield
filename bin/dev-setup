#!/bin/bash

#requires: jq

set -e 

cd "$( dirname "${BASH_SOURCE[0]}" )"

#if no cli, make cli
if [[ ! -f "../shield" ]]
then
  pushd .. && make shield-cli  
  popd
fi

shieldbackend="http://localhost:8181"
shieldcomm="../shield -k --raw"
jqcomm="jq -Mr"
targetdir=$1
storedir=$2

echo targetdir=$targetdir 
echo storedir=$storedir

$shieldcomm create backend localdev $shieldbackend
echo "backend created"
target=$($shieldcomm create target <<MEEP0 | $jqcomm .uuid
{
  "agent": "127.0.0.1:5444",
  "endpoint": "{\"base_dir\":\"${targetdir}\",\"bsdtar\":\"bsdtar\",\"exclude\":\"var/*.db\"}",
  "name": "DevTarget",
  "plugin": "fs",
  "summary": "The working directory of the dev environment."
} 
MEEP0 )
#target=$($jqcomm .uuid <<<$target)
echo "target=$target"

store=$( $shieldcomm create store <<MEEP1 | $jqcomm .uuid
{
  "endpoint": "{\"base_dir\":\"${storedir}\",\"bsdtar\":\"bsdtar\"}",
  "name": "DevStore",
  "plugin": "fs",
  "summary": "A temporary store for the dev environment."
}
MEEP1 )
echo "store=$store"

policy=$( $shieldcomm create retention policy <<MEEP2 | $jqcomm .uuid 
{
  "expires": 31536000,
  "name": "DevPolicy",
  "summary": "A Test Policy"
}
MEEP2 )
echo "policy=$policy"

schedule=$( $shieldcomm create schedule <<MEEP3 | $jqcomm .uuid 
{
  "name": "DevSched",
  "summary": "A Test Schedule",
  "when": "daily 4am"
}
MEEP3 )
echo "schedule=$schedule"

$shieldcomm create job <<MEEP4
{
  "name": "DevJob",
  "paused": true,
  "retention": "$policy",
  "schedule": "$schedule",
  "store": "$store",
  "summary": "A Test Job",
  "target": "$target"
}
MEEP4
