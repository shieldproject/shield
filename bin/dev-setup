#!/bin/bash
set -e

cd "$(dirname "${BASH_SOURCE[0]}")"

#if no cli, make cli
if [[ ! -f "../shield" ]]
then
  pushd .. && make shield-cli
  popd
fi

shieldbackend="http://localhost:8181"
shield="../shield -k --raw -D"
jq="jq -Mr"
targetdir=$1
storedir=$2

echo targetdir=$targetdir
echo storedir=$storedir

$shield create-backend localdev $shieldbackend
echo "backend created"
target=$($shield create-target <<EOF | $jq .uuid
{
  "agent"    : "127.0.0.1:5444",
  "endpoint" : "{\"base_dir\":\"${targetdir}\",\"bsdtar\":\"bsdtar\",\"exclude\":\"var/*.db\"}",
  "name"     : "DevTarget",
  "plugin"   : "fs",
  "summary"  : "The working directory of the dev environment."
}
EOF
)
if [[ "$target" = "null" ]]; then
  echo >&2 "Failed to create the DevTarget target"
  exit 1
fi
echo "target=$target"

store=$($shield create-store <<EOF | $jq .uuid
{
  "endpoint" : "{\"base_dir\":\"${storedir}\",\"bsdtar\":\"bsdtar\"}",
  "name"     : "DevStore",
  "plugin"   : "fs",
  "summary"  : "A temporary store for the dev environment."
}
EOF
)
if [[ "$store" = "null" ]]; then
  echo >&2 "Failed to create the DevStore store"
  exit 1
fi
echo "store=$store"

policy=$($shield create-policy <<EOF | $jq .uuid
{
  "name"    : "DevPolicy",
  "summary" : "A Test Policy",
  "expires" : 86400
}
EOF
)
if [[ "$policy" = "null" ]]; then
  echo >&2 "Failed to create the DevPolicy retention policy"
  exit 1
fi
echo "target=$target"
echo "policy=$policy"

schedule=$($shield create-schedule <<EOF | $jq .uuid
{
  "name"    : "DevSched",
  "summary" : "A Test Schedule",
  "when"    : "daily 4am"
}
EOF
)

if [[ "$schedule" = "null" ]]; then
  echo >&2 "Failed to create the DevSchedule schedule"
  exit 1
fi
echo "target=$target"
echo "schedule=$schedule"

$shield create-job <<EOF
{
  "name"      : "DevJob",
  "paused"    : true,
  "retention" : "$policy",
  "schedule"  : "$schedule",
  "store"     : "$store",
  "summary"   : "A Test Job",
  "target"    : "$target"
}
EOF
