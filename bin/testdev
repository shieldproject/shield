#!/bin/bash
export PATH=$(pwd):$(pwd)/bin:${PATH}
workdir=""
ADDR=127.0.0.1:8181

setup_workdir() {
  workdir=$(mktemp -d /tmp/shield.testdev.XXXXXXX)
  storedir=$(mktemp -d /tmp/shield.testdev.storeXXXXXXX)
  trap "rm -rf ${workdir} ${storedir}" EXIT QUIT INT TERM

  mkdir ${workdir}/etc
  mkdir ${workdir}/var
}

# If a work directory is not supplied as a parameter,
# create one.
if [ $# -lt 2 ]; then
    setup_workdir
else
    workdir="${2}"
fi

export DATABASE_TYPE=${DATABASE_TYPE:-sqlite3}
export DATABASE_DSN=${DATABASE_DSN:-$workdir/var/shield.db}
export SHIELD_API_TOKEN=LETMEIN

case "${1}" in
(shieldd)
  ssh-keygen -t rsa -f ${workdir}/var/shieldd_key -N '' >/dev/null
  rm ${workdir}/var/shieldd_key.pub

  cat >${workdir}/etc/shieldd.conf <<EOF
---
listen_addr:   ${ADDR}
database_type: ${DATABASE_TYPE}
database_dsn:  ${DATABASE_DSN}
private_key:   ${workdir}/var/shieldd_key
workers:       3
max_timeout:   10
web_root: ./webui
auth:
  api_tokens:
    test: ${SHIELD_API_TOKEN}
  basic:
    user: testuser
    password: testpass
#  oauth:
#    provider: github
#    key: Fill this in with the github Client ID after creating a dev oauth app
#    secret: Fill this in with the github secret after creating a dev oath app
#    base_url: http://localhost:8181
#    orgs:
#    - Fill this in with a real github group you want to restrict access to
#    sessions:
#      type: sqlite3
#      dsn: ${workdir}/var/sessions.db
EOF

  echo ">> Setting up SHIELD schema"
  ./shield-schema -t ${DATABASE_TYPE} -d "${DATABASE_DSN}"
  echo

  echo ">> RUNNING SHIELDD"
  ./shieldd -c ${workdir}/etc/shieldd.conf --log-level debug
  echo
  echo "shieldd exited."
  echo "Press enter to close this session."
  read JUNK
  ;;
(shieldagent)
  agent_up="1"
  while [ $agent_up -eq 1 ]; do
      sleep 1
      agent_up=`nc -z 127.0.0.1 8181; echo $?`
  done

  ssh-keygen -t rsa -f ${workdir}/var/shield-agent_key -N '' >/dev/null
  rm ${workdir}/var/shield-agent_key.pub

  `curl -XGET -H "X-Shield-Token: ${SHIELD_API_TOKEN}" http://127.0.0.1:8181/v1/meta/pubkey >> ${workdir}/var/authorized_keys`
  cat >${workdir}/etc/shield-agent.conf <<EOF
---
authorized_keys_file: ${workdir}/var/authorized_keys
host_key_file: ${workdir}/var/shield-agent_key
listen_address: 0.0.0.0:5444
plugin_paths:
  - $(pwd)
EOF

  echo ">> RUNNING SHIELD AGENT"
  ./shield-agent -c ${workdir}/etc/shield-agent.conf --log-level debug
  echo
  echo "shield-agent exited."
  echo "Press enter to close this session."
  read JUNK
  ;;
("")
  tmux new-session \; set-option update-environment ' SHIELD_API' \; \
       new-window -n daemon ./bin/testdev shieldd ${workdir} \; \
       new-window -n agent ./bin/testdev shieldagent ${workdir} \; \
       new-window -n dev-setup "sleep 5 && ./bin/dev-setup ${workdir} ${storedir} ; read JUNK" \;
  ;;

(*)
  echo >&2 "USAGE: $0 [ACTION]"
  echo >&2 ""
  echo >&2 "Run components of a test/dev shield setup, on http://${ADDR}"
  echo >&2 ""
  echo >&2 "Actions:"
  echo >&2 "  shieldd     Run SHIELD core daemon"
esac

# vim:ft=bash
