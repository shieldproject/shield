// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/cloudfoundry/bosh-cli/cpi/release (interfaces: CPIReleaseValidator)

package mocks

import (
	manifest "github.com/cloudfoundry/bosh-cli/installation/manifest"
	ui "github.com/cloudfoundry/bosh-cli/ui"
	gomock "github.com/golang/mock/gomock"
)

// Mock of CPIReleaseValidator interface
type MockCPIReleaseValidator struct {
	ctrl     *gomock.Controller
	recorder *_MockCPIReleaseValidatorRecorder
}

// Recorder for MockCPIReleaseValidator (not exported)
type _MockCPIReleaseValidatorRecorder struct {
	mock *MockCPIReleaseValidator
}

func NewMockCPIReleaseValidator(ctrl *gomock.Controller) *MockCPIReleaseValidator {
	mock := &MockCPIReleaseValidator{ctrl: ctrl}
	mock.recorder = &_MockCPIReleaseValidatorRecorder{mock}
	return mock
}

func (_m *MockCPIReleaseValidator) EXPECT() *_MockCPIReleaseValidatorRecorder {
	return _m.recorder
}

func (_m *MockCPIReleaseValidator) RegisterValidCpiReleaseSpecifiedIn(_param0 string, _param1 manifest.Manifest, _param2 ui.Stage) error {
	ret := _m.ctrl.Call(_m, "RegisterValidCpiReleaseSpecifiedIn", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCPIReleaseValidatorRecorder) RegisterValidCpiReleaseSpecifiedIn(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RegisterValidCpiReleaseSpecifiedIn", arg0, arg1, arg2)
}
